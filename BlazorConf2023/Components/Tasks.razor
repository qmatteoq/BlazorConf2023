@using Microsoft.Graph;
@using Microsoft.Graph.Models;
@inject TeamsFx teamsfx
@inject TeamsUserCredential teamsUserCredential
@inject MicrosoftTeams MicrosoftTeams

<h3>Tasks</h3>

@if (tasks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul>
        @foreach (var task in tasks)
        {
            <li>@task.Title</li>
        }
    </ul>
}

@code {
    string name;
    List<TodoTask> tasks;

    protected async override Task OnInitializedAsync()
    {
        string scopes = "Tasks.Read";
        try
        {
            var graphClient = teamsfx.CreateMicrosoftGraphClient(teamsUserCredential, scopes);
            var lists = await graphClient.Me.Todo.Lists.GetAsync();
            var mainList = lists.Value.Where(x => x.DisplayName == "Tasks").FirstOrDefault();
            var response = await graphClient.Me.Todo.Lists[mainList.Id].Tasks.GetAsync();
            tasks = response.Value;
        }
        catch
        {
            await teamsUserCredential.LoginAsync(scopes);
        }

    }
}
